name: Run PHPStan
on:
  workflow_call:
    inputs:
      extensionName:
        description: 'Your extension name'
        required: true
        type: string
      shopwareVersion:
        required: false
        type: string
        default: 'trunk'
env:
  SHOPWARE_TOOL_CACHE_PHPSTAN: ${{ github.workspace }}/var/phpstan
jobs:
  run:
    name: Static Analyse
    runs-on: ubuntu-latest
    steps:
      - name: Setup Shopware
        uses: FriendsOfShopware/setup-shopware@main
        with:
          shopware-version: ${{ inputs.shopwareVersion }}
          php-version: 8.2
          env: prod
          install: 'true'
      - name: Clone Extension
        uses: actions/checkout@v4
        with:
          path: custom/plugins/${{ inputs.extensionName }}
      - name: Install extension with Composer
        run: composer require $(composer -d custom/plugins/${{ inputs.extensionName }} config name)
      - name: Create phpstan.neon
        working-directory: custom/plugins/${{ inputs.extensionName }}
        run: |
          printf "parameters:\n  tmpDir: ${{ env.SHOPWARE_TOOL_CACHE_PHPSTAN }}\nincludes:\n  - phpstan.neon.dist" > phpstan.neon
      - name: PHPStan cache
        uses: actions/cache@v3
        with:
          path: ${{ env.SHOPWARE_TOOL_CACHE_PHPSTAN }}
          key: ${{ runner.OS }}-${{ github.repository }}-phpstan-${{ github.sha }}
          restore-keys: |
            ${{ runner.OS }}-${{ github.repository }}-phpstan-
      - name: Refresh
        run: bin/console plugin:refresh
      - name: Install Extension
        run: bin/console plugin:install --activate ${{ inputs.extensionName }}
      - name: Build PHPStan Bootstrap
        run: php ${{ github.workspace }}/src/Core/DevOps/StaticAnalyze/phpstan-bootstrap.php
      - name: Run PHPStan
        working-directory: custom/plugins/${{ inputs.extensionName }}
        run: ${{ github.workspace }}/vendor/bin/phpstan analyze --error-format=github --no-progress
